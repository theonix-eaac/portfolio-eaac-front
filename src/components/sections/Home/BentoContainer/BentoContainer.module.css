/* Grid Container */
.grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 20px;
  padding: 24px;
  min-height: 100vh;
  background-color: var(--black-warm);
}

@keyframes lightSweep {
  0% {
    transform: translateX(-100%) rotate(45deg);
    opacity: 0.1;
  }
  100% {
    transform: translateX(200%) rotate(45deg);
    opacity: 0.3;
  }
}

@keyframes fadeSlideUp {
  0% {
    opacity: 0;
    transform: translateY(40px) scale(0.95);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes zoomInFade {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes flipFade {
  0% {
    opacity: 0;
    transform: rotateY(90deg);
  }
  100% {
    opacity: 1;
    transform: rotateY(0deg);
  }
}

/* Base Item Style */
.item {
  position: relative;
  overflow: hidden;
  padding: 24px;
  font-size: 1.2rem;
  font-weight: 600;
  color: var(--text-light);
  border-radius: 16px;
  border: 1px solid var(--moss-green-color);
  background-size: 150% 150%;
  background-position: center;
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.4);
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  will-change: filter, transform;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  opacity: 0;
}

.item:hover {
  transform: scale(1.04);
  box-shadow: 0 6px 14px rgba(255, 255, 255, 0.8);
}

/* Light sweep effect (single layer) */
.item::after {
  content: "";
  position: absolute;
  top: 0;
  left: -150%;
  width: 200%;
  height: 100%;
  background: linear-gradient(45deg, rgba(255, 255, 255, 0.1), transparent 70%);
  animation: lightSweep 6s linear infinite;
  z-index: 1;
}

.item > * {
  position: relative;
  z-index: 2;
}

/* Background variations */
.item0 {
  background: linear-gradient(
    135deg,
    var(--earth-green-rgba),
    rgba(255, 255, 255, 0.06)
  );
  animation: fadeSlideUp 0.6s ease-out forwards;
  animation-delay: 0.1s;
}

.item1 {
  background: linear-gradient(
    135deg,
    var(--olive-green-rgba),
    rgba(255, 255, 255, 0.06)
  );
  animation: zoomInFade 0.6s ease-out forwards;
  animation-delay: 0.3s;
}

.item2 {
  background: linear-gradient(
    135deg,
    var(--moss-green-rgba),
    rgba(255, 255, 255, 0.06)
  );
  animation: flipFade 0.6s ease-out forwards;
  animation-delay: 0.5s;
}

.item3 {
  background: linear-gradient(
    135deg,
    var(--brush-green-rgba),
    rgba(255, 255, 255, 0.06)
  );
  animation: fadeSlideUp 0.6s ease-out forwards;
  animation-delay: 0.7s;
}

.item4 {
  background: linear-gradient(
    135deg,
    var(--forest-green-rgba),
    rgba(255, 255, 255, 0.06)
  );
  animation: zoomInFade 0.6s ease-out forwards;
  animation-delay: 0.9s;
}

.item5 {
  background: linear-gradient(
    135deg,
    var(--olive-green-rgba),
    rgba(255, 255, 255, 0.2)
  );
  animation: flipFade 0.6s ease-out forwards;
  animation-delay: 1.1s;
}

.item6 {
  background: linear-gradient(
    135deg,
    var(--earth-green-rgba),
    rgba(255, 255, 255, 0.3)
  );
  animation: fadeSlideUp 0.6s ease-out forwards;
  animation-delay: 1.3s;
}

/* Responsive Layouts (mismos breakpoints) */
@media (min-width: 1200px) {
  .grid {
    grid-template-columns: repeat(6, 1fr);
  }
  .item0 {
    grid-column: 1 / span 3;
  }
  .item1 {
    grid-column: 4 / span 3;
  }
  .item2 {
    grid-column: 1 / span 2;
  }
  .item3 {
    grid-column: 3 / span 2;
  }
  .item4 {
    grid-column: 5 / span 2;
  }
  .item5 {
    grid-column: 1 / span 3;
  }
  .item6 {
    grid-column: 4 / span 3;
  }
}

@media (max-width: 1199px) and (min-width: 900px) {
  .grid {
    grid-template-columns: repeat(6, 1fr);
  }
  .item0,
  .item1,
  .item6 {
    grid-column: 1 / span 6;
  }
  .item2 {
    grid-column: 1 / span 3;
  }
  .item3 {
    grid-column: 4 / span 3;
  }
  .item4 {
    grid-column: 1 / span 2;
  }
  .item5 {
    grid-column: 3 / span 4;
  }
}

@media (max-width: 899px) and (min-width: 600px) {
  .grid {
    grid-template-columns: repeat(6, 1fr);
  }
  .item0,
  .item1,
  .item2,
  .item5,
  .item6 {
    grid-column: 1 / span 6;
  }
  .item3 {
    grid-column: 1 / span 3;
  }
  .item4 {
    grid-column: 4 / span 3;
  }
}

@media (max-width: 599px) {
  .grid {
    grid-template-columns: repeat(6, 1fr);
    gap: 10px;
    padding: 12px;
  }
  .item {
    padding: 12px;
    font-size: 1.1rem;
  }
  .item0,
  .item1,
  .item6 {
    grid-column: 1 / span 6;
  }
  .item2,
  .item4 {
    grid-column: 1 / span 3;
  }
  .item3,
  .item5 {
    grid-column: 4 / span 3;
  }
}
